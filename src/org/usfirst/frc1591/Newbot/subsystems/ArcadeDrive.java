// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1591.Newbot.subsystems;

import org.usfirst.frc1591.Newbot.RobotMap;
import org.usfirst.frc1591.Newbot.commands.*;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class ArcadeDrive extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon rearLeft = RobotMap.arcadeDriverearLeft;
    private final CANTalon frontLeft = RobotMap.arcadeDrivefrontLeft;
    private final CANTalon rearRight = RobotMap.arcadeDriverearRight;
    private final CANTalon frontRight = RobotMap.arcadeDrivefrontRight;
    private final RobotDrive timeToDrive = RobotMap.arcadeDriveTimeToDrive;
    private final Encoder rightEncoder = RobotMap.arcadeDriverightEncoder;
    private final Encoder leftEncoder = RobotMap.arcadeDriveleftEncoder;
    private final AnalogInput ultraSonic = RobotMap.arcadeDriveUltraSonic;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new controlDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
      
        // setDefaultCommand(new MySpecialCommand());
    }
    public void driving(Joystick stick){
    	 timeToDrive.arcadeDrive(stick);
    }
    public void driveStraight(double speed){
    	timeToDrive.arcadeDrive(speed, 0);
    }
    public boolean maxDistance(double distance){
    	if (8.65*ultraSonic.getVoltage() >= distance)
    		return true;
    	else
    		return false;
    }
    public boolean minDistance(double distance){
    	if (8.65*ultraSonic.getVoltage() <= distance)
    		return true;
    	else
    		return false;
    }
    public void driveCommand(double speed, double speed2){
    	timeToDrive.tankDrive(-speed, -speed2);
    }
	
    
}

